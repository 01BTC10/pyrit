#summary FAQ and troubleshooting
#labels Featured

= Introduction =

Here you should find relief for the most common problems with Pyrit.

=== Pyrit does not use SSE2 ===

The CPU-core supports SSE2 since version '0.2.3-dev (r112)'. The code is currently only available by installing from [Installation#Adventurous:_Source-code_from_svn-trunk svn-trunk].


=== Using CPyrit-CUDA with CUDA 2.2 causes the error message 'Failed to load CUDA-core (CUDA_ERROR_INVALID_IMAGE)' ===

This error was fixed in version '0.2.3-dev (r99)'. You either have to use the code from [Installation#Adventurous:_Source-code_from_svn-trunk svn-trunk] or downgrade to CUDA 2.1.


=== Compiling CPyrit-Stream throws an error message 'explicit template specialization cannot have a storage class' ===

The error usually refers to 'brtvector.hpp' and is caused by a bug in the ATI-Stream SDK. To fix it open '/usr/local/atibrook/sdk/include/brook/CPU/brtvector.hpp' and search for

{{{
#define SPECIALGETAT(TYP) template <> static TYP GetAt (const TYP& in,int i) {return in;}
}}}

Remove the word 'static' from the line above so it becomes:

{{{
#define SPECIALGETAT(TYP) template <> TYP GetAt (const TYP& in,int i) {return in;}
}}}

Save the file and re-compile.

=== Pyrit no longer uses all CPUs after installing a GPU-driven extension-module ===

This behaviour is intended. Pyrit keeps one CPU free for scheduling work with every GPU it uses.

=== My GPU does not show up in 'list_cores' ===

Pyrit suppresses most errors that occur while loading the GPU-extensions as they are usually caused by simply not having compatible hardware installed. Open a terminal and try loading the offending module directly to get more information.

For CPyrit-Stream:

{{{
python -c 'from _cpyrit import _cpyrit_stream'
}}}

For CPyrit-CUDA:

{{{
python -c 'from _cpyrit import _cpyrit_cuda'
}}}

There is no output at all if the module was loaded successfully. Some of the errors you might get include:

 * *`ImportError: cannot import name _cpyrit_cuda / ImportError: cannot import name _cpyrit_stream`*

 The CPyrit-Stream or CPyrit-CUDA modules are simply not installed or can't be found in the current Python-environment. Try (re-) installing the extension modules and make sure you don't mix the Python-interpreters you use (this can happen on MacOS which tends to have multiple versions of Python installed).

 * *`ImportError: libaticalcl.so not found.`*

 The CPyrit-Stream module requires ATIs proprietary driver 'fglrx' to be installed. 

 * *`ImportError: libcuda.so.1: cannot open shared object file: No such file or directory`*

 The CPyrit-CUDA modules requires Nvidia's proprietary driver to be installed. Depending on your distribution you may also need to symlink e.g. '/usr/lib/nvidia/libcuda.so.1' to '/usr/lib/libcuda.so.1' or add '/usr/lib/nvidia' to your _ldconfig_.

 * *`NVIDIA: could not open the device file /dev/nvidiactl (No such file or directory).`*

 Ensure that the 'nvidia' module has been successfully loaded. Taking a look at the kernel ringbuffer may give more help:

 {{{
 modprobe nvidia
 dmesg | tail
 }}}

 * *`ImportError: CUDA seems to be unavailable or no device reported.`*

 The CUDA-driver has loaded but failed to initialize or reports that none of your GPUs is compatible. Take a look at [http://www.nvidia.com/object/cuda_learn_products.html this page] to find out if your GPU is supported. You may need to update your drivers.

 * *`ImportError: No CAL-compatible devices available`*

 Same reason as above. Check [http://developer.amd.com/gpu/ATIStreamSDK/pages/ATIStreamSystemRequirements.aspx#cards this list] to find out if your GPU is compatible.


=== Xorg becomes slow and unresponsive when using Pyrit on the GPU ===

O rly ?

=== Pyrit says it stored only Y passwords after trying to import a wordlist of X entries ===

Pyrit ignores passwords that have less than 8 or more than 63 characters as those can't be used for WPA anyway.

=== The .pyrit directory has a size of only Y MB after importing a wordlist of X GB  ===

Pyrit uses [http://www.zlib.net zlib]-compression to store the passwords.

